<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../xsd/dr.xsd"?>
<?xml-model href="../../relaxng/dr/dr.rnc" type="application/relax-ng-compact-syntax"?>
<RuleML xmlns="http://ruleml.org/spec" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- Clocksin/Mellish sample rule 

This example shows how derivation rules and queries are explicitly quantified.

Note, this examples makes use of the generic Quantifier which is specialized by pointing
to an externally defined quantifier definition. This approach is extensible and allows 
user-defined quantifiers as needed for certain logics. 

It also defines the shorter quantifier element 
<Forall> for ruleml:Forall
<Exists> for ruleml:Exists

-->

  <!-- assert knowledge -->

  <Assert>

    <!-- rule -->

    <Rule>

      <quantification>
        <!-- explicit quantification -->

        <!-- "forall" quantifier; 
		     Note: Reaction RuleML 1.0 also supports the "shortcut" 
                 element "Forall" as it is used in RuleML 1.0, see FullDerivationRule example -->

        <Quantifier type="ruleml:Forall">

          <!-- for all ?x -->
          <Var>x</Var>

          <!-- such that ?x is not John -->
          <Neg>
            <Equal>
              <Var>x</Var>
              <Ind>John</Ind>
            </Equal>
          </Neg>

        </Quantifier>
      </quantification>


      <if>
        <Atom>
          <op>
            <Rel>likes</Rel>
          </op>
          <Var>X</Var>
          <Ind>wine</Ind>
        </Atom>
      </if>
      <then>
        <Atom>
          <op>
            <Rel>likes</Rel>
          </op>
          <Ind>John</Ind>
          <Var>X</Var>
        </Atom>
      </then>
    </Rule>

    <!-- fact -->

    <Atom>
      <op>
        <Rel>likes</Rel>
      </op>
      <Ind>Mary</Ind>
      <Ind>wine</Ind>
    </Atom>

  </Assert>

  <!-- query knowledge base -->

  <Query>

    <quantification>
      <!-- explicit quantification -->

      <!-- "Exists" quantifier; 
		     Note: Reaction RuleML 1.0 also supports the "shortcut" 
                 element "Exists", see FullDerivationRule example -->

      <Quantifier type="ruleml:Exists">
        <Var>x</Var>
      </Quantifier>

    </quantification>


    <Atom>
      <Rel>likes</Rel>
      <Ind>John</Ind>
      <Var>whom</Var>
    </Atom>
  </Query>

</RuleML>
