<?xml version="1.0" encoding="UTF-8"?>

<?xml-model href="http://reaction.ruleml.org/1.0/xsd/pr.xsd"?>
<RuleML xmlns="http://ruleml.org/spec" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://ruleml.org/spec http://reaction.ruleml.org/1.0/xsd/pr.xsd">

<!-- 
This example illustrates the use of negation, assert, retract, update in Production Rules

     p :- q
     q :- NOT r
     s :- NOT p


-->

  <!-- assert knowledge -->

  <Assert>

    <Rule>
      <if><Atom><Rel>q</Rel></Atom></if>
      <do><Assert><Atom><Rel>p</Rel></Atom></Assert></do>
    </Rule>

    <Rule>
      <if><Naf><Atom><Rel>r</Rel></Atom></Naf></if>
      <do><Assert><Atom><Rel>q</Rel></Atom></Assert></do>
    </Rule>

    <Rule>
      <!-- using the generic <Negation> typed with InflationaryNegation is equivalent to <Naf> in production rules with inflationary semantics -->
      <if><Negation type="ruleml:InflationaryNegation"><Atom><Rel>p</Rel></Atom></Negation></if>
      <do><Assert><Atom><Rel>s</Rel></Atom></Assert></do>
    </Rule>

  </Assert>

  <!-- query knowledge base using the typical inflationary semantics of production rules which interprets Naf as inflationry negation
  
  Round 0: None of p, q, r, and s are true. 
  Round 1: From falsehood of r it is possible to infer q, and the falsehood of p infers s. The inflationary model now is {q,s}. 
  Round 2: The truth of q infers p. The inflationary model is now {p,q,s}. Note that even though p is now true, the use of NOT p to infer s stands. 
  Round 3: No new inferences are possible; the inflationary model is {p,q,s} and the query succeeds.
  
  Note: the inflationary model is different from e.g. the well-founded model or the answer-set/stable model which would not infer "s"
  -->

  <Query>
    <evaluation>
      <Profile type="ruleml:InflationarySemantics"/>
    </evaluation>
    <And>
      <Atom><Rel>p</Rel></Atom>
      <Atom><Rel>q</Rel></Atom>
      <Atom><Rel>s</Rel></Atom>
    </And>
  </Query>

</RuleML>
