<?xml version="1.0"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0">
  <start>
    <choice>
      <ref name="RuleML"/>
      <ref name="Assert"/>
      <ref name="Retract"/>
      <ref name="Query"/>
      <ref name="Atom"/>
      <ref name="Rel"/>
      <ref name="Implies"/>
      <ref name="Forall"/>
      <ref name="Exists"/>
      <ref name="Neg"/>
      <ref name="Data"/>
      <ref name="Ind"/>
      <ref name="Var"/>
      <ref name="Rule"/>
      <ref name="Negation"/>
      <ref name="Quantifier"/>
      <ref name="Profile"/>
      <ref name="Time"/>
      <ref name="Spatial"/>
      <ref name="Interval"/>
      <ref name="Operator"/>
      <ref name="After"/>
      <ref name="Before"/>
      <ref name="Every"/>
      <ref name="Any"/>
      <ref name="Timer"/>
      <ref name="During"/>
      <ref name="Overlaps"/>
      <ref name="Starts"/>
      <ref name="Precedes"/>
      <ref name="Succeeds"/>
      <ref name="Meets"/>
      <ref name="Finishes"/>
      <ref name="formula"/>
      <ref name="formula_2"/>
      <ref name="op"/>
      <ref name="then"/>
      <ref name="if"/>
      <ref name="declare"/>
      <ref name="formula_3"/>
      <ref name="formula_4"/>
      <ref name="strong"/>
      <ref name="meta"/>
      <ref name="slot"/>
      <ref name="arg"/>
      <ref name="scope"/>
      <ref name="guard"/>
      <ref name="evaluation"/>
      <ref name="signature"/>
      <ref name="qualification"/>
      <ref name="quantification"/>
      <ref name="else"/>
      <ref name="formula_5"/>
      <ref name="content"/>
      <ref name="arg_2"/>
      <ref name="content_2"/>
      <ref name="arg_3"/>
      <ref name="content_3"/>
      <ref name="content_4"/>
      <ref name="arg_4"/>
    </choice>
  </start>
  <define name="RuleML">
    <element name="RuleML" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <oneOrMore>
          <choice>
            <ref name="act"/>
            <zeroOrMore>
              <choice>
                <ref name="Assert"/>
                <ref name="Retract"/>
                <ref name="Query"/>
              </choice>
            </zeroOrMore>
          </choice>
        </oneOrMore>
      </group>
    </element>
  </define>
  <define name="Assert">
    <element name="Assert" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="mapClosure" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">universal</value>
                <value type="token" datatypeLibrary="" ns="">existential</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <zeroOrMore>
          <choice>
            <ref name="formula"/>
            <ref name="Atom"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Neg"/>
            <ref name="Negation"/>
            <ref name="Implies"/>
            <ref name="Forall"/>
            <ref name="Quantifier"/>
          </choice>
        </zeroOrMore>
      </group>
    </element>
  </define>
  <define name="Retract">
    <element name="Retract" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="mapClosure" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">universal</value>
                <value type="token" datatypeLibrary="" ns="">existential</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <zeroOrMore>
          <choice>
            <ref name="formula"/>
            <ref name="Atom"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Neg"/>
            <ref name="Negation"/>
            <ref name="Implies"/>
            <ref name="Forall"/>
            <ref name="Quantifier"/>
          </choice>
        </zeroOrMore>
      </group>
    </element>
  </define>
  <define name="Query">
    <element name="Query" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="closure" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">universal</value>
                <value type="token" datatypeLibrary="" ns="">existential</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <zeroOrMore>
          <choice>
            <ref name="formula_2"/>
            <ref name="Atom"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Neg"/>
            <ref name="Negation"/>
            <ref name="Exists"/>
            <ref name="Quantifier"/>
          </choice>
        </zeroOrMore>
      </group>
    </element>
  </define>
  <define name="Atom">
    <element name="Atom" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="closure" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">universal</value>
                <value type="token" datatypeLibrary="" ns="">existential</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="op"/>
          <ref name="Rel"/>
        </choice>
        <zeroOrMore>
          <choice>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="arg"/>
          </choice>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="slot"/>
        </zeroOrMore>
      </group>
    </element>
  </define>
  <define name="Rel">
    <element name="Rel" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="iri" ns="">
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="per" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">copy</value>
                <value type="token" datatypeLibrary="" ns="">value</value>
                <value type="token" datatypeLibrary="" ns="">effect</value>
                <value type="token" datatypeLibrary="" ns="">modal</value>
                <value type="token" datatypeLibrary="" ns="">open</value>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <text/>
      </group>
    </element>
  </define>
  <define name="Implies">
    <element name="Implies" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="closure" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">universal</value>
                <value type="token" datatypeLibrary="" ns="">existential</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <group>
            <ref name="if"/>
            <ref name="then"/>
          </group>
          <group>
            <choice>
              <ref name="Atom"/>
              <ref name="Time"/>
              <ref name="Spatial"/>
              <ref name="Interval"/>
              <ref name="Neg"/>
              <ref name="Negation"/>
            </choice>
            <choice>
              <ref name="Atom"/>
              <ref name="Time"/>
              <ref name="Spatial"/>
              <ref name="Interval"/>
              <ref name="Neg"/>
              <ref name="Negation"/>
            </choice>
          </group>
        </choice>
      </group>
    </element>
  </define>
  <define name="Forall">
    <element name="Forall" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <oneOrMore>
          <choice>
            <ref name="declare"/>
            <ref name="Var"/>
          </choice>
        </oneOrMore>
        <choice>
          <ref name="formula_3"/>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Implies"/>
          <ref name="Forall"/>
          <ref name="Quantifier"/>
        </choice>
      </group>
    </element>
  </define>
  <define name="Exists">
    <element name="Exists" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <oneOrMore>
          <choice>
            <ref name="declare"/>
            <ref name="Var"/>
          </choice>
        </oneOrMore>
        <choice>
          <ref name="formula_4"/>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Exists"/>
          <ref name="Quantifier"/>
        </choice>
      </group>
    </element>
  </define>
  <define name="Neg">
    <element name="Neg" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="iri" ns="">
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="strong"/>
        </choice>
      </group>
    </element>
  </define>
  <define name="Data">
    <element name="Data" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <text/>
        <zeroOrMore>
          <ref name="_1"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="Ind">
    <element name="Ind" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="iri" ns="">
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </attribute>
          </optional>
          <optional>
            <attribute name="type" ns="">
              <choice>
                <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][/\c-[:]]*</param>
                </data>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <text/>
      </group>
    </element>
  </define>
  <define name="Var">
    <element name="Var" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="type" ns="">
              <choice>
                <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][/\c-[:]]*</param>
                </data>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="mode" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">+</value>
                <value type="token" datatypeLibrary="" ns="">-</value>
                <value type="token" datatypeLibrary="" ns="">?</value>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <text/>
      </group>
    </element>
  </define>
  <define name="Rule">
    <element name="Rule" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <optional>
          <choice>
            <interleave>
              <ref name="if"/>
              <ref name="then"/>
              <optional>
                <ref name="else"/>
              </optional>
            </interleave>
            <group>
              <choice>
                <ref name="Atom"/>
                <ref name="Time"/>
                <ref name="Spatial"/>
                <ref name="Interval"/>
                <ref name="Neg"/>
                <ref name="Negation"/>
              </choice>
              <choice>
                <ref name="Atom"/>
                <ref name="Time"/>
                <ref name="Spatial"/>
                <ref name="Interval"/>
                <ref name="Neg"/>
                <ref name="Negation"/>
              </choice>
              <optional>
                <choice>
                  <ref name="Atom"/>
                  <ref name="Time"/>
                  <ref name="Spatial"/>
                  <ref name="Interval"/>
                  <ref name="Neg"/>
                  <ref name="Negation"/>
                </choice>
              </optional>
            </group>
          </choice>
        </optional>
        <interleave>
          <optional>
            <attribute name="style" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">reasoning</value>
                <value type="token" datatypeLibrary="" ns="">active</value>
                <value type="token" datatypeLibrary="" ns="">messaging</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="closure" ns="">
              <choice>
                <value type="token" datatypeLibrary="" ns="">universal</value>
                <value type="token" datatypeLibrary="" ns="">existential</value>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="type" ns="">
              <choice>
                <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][/\c-[:]]*</param>
                </data>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Negation">
    <element name="Negation" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="formula_5"/>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Quantifier">
    <element name="Quantifier" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <oneOrMore>
          <choice>
            <ref name="declare"/>
            <ref name="Var"/>
            <ref name="Var"/>
          </choice>
        </oneOrMore>
        <optional>
          <choice>
            <ref name="formula_6"/>
            <ref name="Atom"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Neg"/>
            <ref name="Negation"/>
            <ref name="Implies"/>
            <ref name="Forall"/>
            <ref name="Quantifier"/>
          </choice>
        </optional>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Profile">
    <element name="Profile" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <zeroOrMore>
          <choice>
            <ref name="formula"/>
            <ref name="Atom"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Neg"/>
            <ref name="Negation"/>
            <ref name="Implies"/>
            <ref name="Forall"/>
            <ref name="Quantifier"/>
            <ref name="content"/>
          </choice>
        </zeroOrMore>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <optional>
          <attribute name="safety" ns="">
            <choice>
              <value type="token" datatypeLibrary="" ns="">non-interrupting</value>
              <value type="token" datatypeLibrary="" ns="">interrupting</value>
              <value type="token" datatypeLibrary="" ns="">transactional</value>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="size" ns="">
            <data type="int" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
      </group>
    </element>
  </define>
  <define name="Time">
    <element name="Time" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <group>
            <zeroOrMore>
              <ref name="slot"/>
            </zeroOrMore>
            <optional>
              <group>
                <oneOrMore>
                  <choice>
                    <ref name="arg_2"/>
                    <ref name="Ind"/>
                    <ref name="Data"/>
                    <ref name="Time"/>
                    <ref name="Spatial"/>
                    <ref name="Interval"/>
                    <ref name="Var"/>
                    <ref name="After"/>
                    <ref name="Before"/>
                    <ref name="Every"/>
                    <ref name="Any"/>
                    <ref name="Timer"/>
                    <ref name="Operator"/>
                  </choice>
                </oneOrMore>
                <zeroOrMore>
                  <ref name="slot"/>
                </zeroOrMore>
              </group>
            </optional>
          </group>
          <zeroOrMore>
            <ref name="content_2"/>
          </zeroOrMore>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Spatial">
    <element name="Spatial" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <group>
            <zeroOrMore>
              <ref name="slot"/>
            </zeroOrMore>
            <optional>
              <group>
                <oneOrMore>
                  <choice>
                    <ref name="arg_3"/>
                    <ref name="Ind"/>
                    <ref name="Data"/>
                    <ref name="Time"/>
                    <ref name="Spatial"/>
                    <ref name="Interval"/>
                    <ref name="Var"/>
                    <ref name="After"/>
                    <ref name="Before"/>
                    <ref name="Every"/>
                    <ref name="Any"/>
                    <ref name="Timer"/>
                    <ref name="Operator"/>
                  </choice>
                </oneOrMore>
                <zeroOrMore>
                  <ref name="slot"/>
                </zeroOrMore>
              </group>
            </optional>
          </group>
          <zeroOrMore>
            <ref name="content_3"/>
          </zeroOrMore>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Interval">
    <element name="Interval" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="arg"/>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="content_4"/>
        </choice>
        <optional>
          <choice>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="arg"/>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="content_4"/>
          </choice>
        </optional>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Operator">
    <element name="Operator" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <optional>
          <choice>
            <oneOrMore>
              <ref name="arg_4"/>
            </oneOrMore>
            <oneOrMore>
              <choice>
                <ref name="Ind"/>
                <ref name="Data"/>
                <ref name="Time"/>
                <ref name="Spatial"/>
                <ref name="Interval"/>
                <ref name="Var"/>
                <ref name="During"/>
                <ref name="Overlaps"/>
                <ref name="Starts"/>
                <ref name="Precedes"/>
                <ref name="Succeeds"/>
                <ref name="Meets"/>
                <ref name="Equal"/>
                <ref name="Finishes"/>
                <ref name="Operator_2"/>
              </choice>
            </oneOrMore>
            <oneOrMore>
              <ref name="content_4"/>
            </oneOrMore>
          </choice>
        </optional>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="After">
    <element name="After" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="arg"/>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="content_4"/>
        </choice>
        <optional>
          <choice>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="arg"/>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="content_4"/>
          </choice>
        </optional>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Before">
    <element name="Before" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="arg"/>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="content_4"/>
        </choice>
        <optional>
          <choice>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="arg"/>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="content_4"/>
          </choice>
        </optional>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Every">
    <element name="Every" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <optional>
          <choice>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="arg"/>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="content_4"/>
          </choice>
        </optional>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Any">
    <element name="Any" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <optional>
          <choice>
            <oneOrMore>
              <ref name="arg_4"/>
            </oneOrMore>
            <oneOrMore>
              <choice>
                <ref name="Ind"/>
                <ref name="Data"/>
                <ref name="Time"/>
                <ref name="Spatial"/>
                <ref name="Interval"/>
                <ref name="Var"/>
                <ref name="During"/>
                <ref name="Overlaps"/>
                <ref name="Starts"/>
                <ref name="Precedes"/>
                <ref name="Succeeds"/>
                <ref name="Meets"/>
                <ref name="Equal"/>
                <ref name="Finishes"/>
                <ref name="Operator_2"/>
              </choice>
            </oneOrMore>
            <oneOrMore>
              <ref name="content_4"/>
            </oneOrMore>
          </choice>
        </optional>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Timer">
    <element name="Timer" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="arg"/>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="content_4"/>
        </choice>
        <optional>
          <choice>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="arg"/>
            <ref name="Ind"/>
            <ref name="Data"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Var"/>
            <ref name="content_4"/>
          </choice>
        </optional>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="During">
    <element name="During" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Overlaps">
    <element name="Overlaps" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Starts">
    <element name="Starts" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Precedes">
    <element name="Precedes" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Succeeds">
    <element name="Succeeds" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Meets">
    <element name="Meets" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Finishes">
    <element name="Finishes" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="formula">
    <element name="formula" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Implies"/>
          <ref name="Forall"/>
          <ref name="Quantifier"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="formula_2">
    <element name="formula" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Exists"/>
          <ref name="Quantifier"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="op">
    <element name="op" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <ref name="Rel"/>
      </interleave>
    </element>
  </define>
  <define name="then">
    <element name="then" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="if">
    <element name="if" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="declare">
    <element name="declare" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <ref name="Var"/>
      </interleave>
    </element>
  </define>
  <define name="formula_3">
    <element name="formula" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Implies"/>
          <ref name="Forall"/>
          <ref name="Quantifier"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="formula_4">
    <element name="formula" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Exists"/>
          <ref name="Quantifier"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="strong">
    <element name="strong" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="meta">
    <element name="meta" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Implies"/>
          <ref name="Forall"/>
          <ref name="Quantifier"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="slot">
    <element name="slot" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="card" ns="">
              <data type="nonNegativeInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </attribute>
          </optional>
          <optional>
            <attribute name="weight" ns="">
              <data type="decimal" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minInclusive">0.0</param>
                <param name="maxInclusive">1.0</param>
              </data>
            </attribute>
          </optional>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
        </choice>
      </group>
    </element>
  </define>
  <define name="arg">
    <element name="arg" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
        </choice>
      </group>
    </element>
  </define>
  <define name="scope">
    <element name="scope" ns="http://ruleml.org/spec">
      <group>
        <optional>
          <choice>
            <ref name="Atom"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Neg"/>
            <ref name="Negation"/>
            <ref name="Exists"/>
            <ref name="Quantifier"/>
          </choice>
        </optional>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="guard">
    <element name="guard" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
        </choice>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="evaluation">
    <element name="evaluation" ns="http://ruleml.org/spec">
      <group>
        <ref name="Profile"/>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="signature">
    <element name="signature" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Exists"/>
          <ref name="Quantifier"/>
        </choice>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="qualification">
    <element name="qualification" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Implies"/>
          <ref name="Forall"/>
          <ref name="Quantifier"/>
        </choice>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="quantification">
    <element name="quantification" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Forall_2"/>
          <ref name="Exists_2"/>
          <ref name="Quantifier"/>
        </choice>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="else">
    <element name="else" ns="http://ruleml.org/spec">
      <interleave>
        <optional>
          <attribute name="key" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="keyref" ns="">
            <choice>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
              </data>
            </choice>
          </attribute>
        </optional>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
        </choice>
      </interleave>
    </element>
  </define>
  <define name="formula_5">
    <element name="formula" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
        </choice>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="content">
    <element name="content" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="_2"/>
        </zeroOrMore>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="arg_2">
    <element name="arg" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="After"/>
          <ref name="Before"/>
          <ref name="Every"/>
          <ref name="Any"/>
          <ref name="Timer"/>
          <ref name="Operator"/>
        </choice>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="content_2">
    <element name="content" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="_2"/>
        </zeroOrMore>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="arg_3">
    <element name="arg" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="After"/>
          <ref name="Before"/>
          <ref name="Every"/>
          <ref name="Any"/>
          <ref name="Timer"/>
          <ref name="Operator"/>
        </choice>
        <optional>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="content_3">
    <element name="content" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="_2"/>
        </zeroOrMore>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="content_4">
    <element name="content" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <interleave>
          <text/>
          <zeroOrMore>
            <ref name="_1"/>
          </zeroOrMore>
        </interleave>
      </group>
    </element>
  </define>
  <define name="arg_4">
    <element name="arg" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Ind"/>
          <ref name="Data"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Var"/>
          <ref name="During"/>
          <ref name="Overlaps"/>
          <ref name="Starts"/>
          <ref name="Precedes"/>
          <ref name="Succeeds"/>
          <ref name="Meets"/>
          <ref name="Equal"/>
          <ref name="Finishes"/>
          <ref name="Operator_2"/>
        </choice>
        <interleave>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="act">
    <element name="act" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <attribute name="index" ns="">
            <data type="positiveInteger" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <choice>
            <ref name="Assert"/>
            <ref name="Retract"/>
            <ref name="Query"/>
          </choice>
        </zeroOrMore>
      </group>
    </element>
  </define>
  <define name="_1">
    <element>
      <anyName/>
      <group>
        <zeroOrMore>
          <attribute>
            <anyName/>
            <text/>
          </attribute>
        </zeroOrMore>
        <interleave>
          <text/>
          <zeroOrMore>
            <ref name="_1"/>
          </zeroOrMore>
        </interleave>
      </group>
    </element>
  </define>
  <define name="formula_6">
    <element name="formula" ns="http://ruleml.org/spec">
      <group>
        <choice>
          <ref name="Atom"/>
          <ref name="Time"/>
          <ref name="Spatial"/>
          <ref name="Interval"/>
          <ref name="Neg"/>
          <ref name="Negation"/>
          <ref name="Implies"/>
          <ref name="Forall"/>
          <ref name="Quantifier"/>
        </choice>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Equal">
    <element name="Equal" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Operator_2">
    <element name="Operator" ns="http://ruleml.org/spec">
      <group>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <choice>
          <ref name="arg_4"/>
          <ref name="Interval"/>
        </choice>
        <optional>
          <attribute name="iri" ns="">
            <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="type" ns="">
            <choice>
              <data type="Name" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="pattern">[\i-[:]][/\c-[:]]*</param>
              </data>
              <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                <param name="minLength">1</param>
                <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
              </data>
              <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"/>
            </choice>
          </attribute>
        </optional>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
      </group>
    </element>
  </define>
  <define name="Forall_2">
    <element name="Forall" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <oneOrMore>
          <choice>
            <ref name="declare"/>
            <ref name="Var"/>
          </choice>
        </oneOrMore>
        <optional>
          <choice>
            <ref name="formula_3"/>
            <ref name="Atom"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Neg"/>
            <ref name="Negation"/>
            <ref name="Implies"/>
            <ref name="Forall"/>
            <ref name="Quantifier"/>
          </choice>
        </optional>
      </group>
    </element>
  </define>
  <define name="Exists_2">
    <element name="Exists" ns="http://ruleml.org/spec">
      <group>
        <interleave>
          <optional>
            <attribute name="key" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
          <optional>
            <attribute name="keyref" ns="">
              <choice>
                <data type="string" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="minLength">1</param>
                  <param name="pattern">(([\i-[:]][\c-[:]]*)?:)?(/[^\s/][^\s]*|[^\s/][^\s]*|[^\s]?)</param>
                </data>
                <data type="anyURI" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
                  <param name="pattern">[\i-[:]][\c-[:]]+:.+</param>
                </data>
              </choice>
            </attribute>
          </optional>
        </interleave>
        <zeroOrMore>
          <ref name="meta"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="scope"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="guard"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="evaluation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="signature"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="qualification"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="quantification"/>
        </zeroOrMore>
        <oneOrMore>
          <choice>
            <ref name="declare"/>
            <ref name="Var"/>
          </choice>
        </oneOrMore>
        <optional>
          <choice>
            <ref name="formula_4"/>
            <ref name="Atom"/>
            <ref name="Time"/>
            <ref name="Spatial"/>
            <ref name="Interval"/>
            <ref name="Neg"/>
            <ref name="Negation"/>
            <ref name="Exists"/>
            <ref name="Quantifier"/>
          </choice>
        </optional>
      </group>
    </element>
  </define>
  <define name="_2">
    <element>
      <anyName/>
      <text/>
    </element>
  </define>
</grammar>
