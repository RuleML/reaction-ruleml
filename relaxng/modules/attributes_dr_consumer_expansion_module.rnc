namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dc:title [ "Reaction RuleML for DR Attributes" ]
dc:version [ "1.0" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:creator [ "Adrian Paschke" ]
dc:subject [ "RuleML, Reaction, Deliberation, Attributes" ]
dc:description [ "The expansion module for consumer attributes." ]
dc:language [ "en" ]
dcterms:rights [ "TBD" ]
dc:relation [ "http://reaction.ruleml.org" ]
start |= notAllowed
# This module declares the following Reaction RuleML attributes:
#    * @key and @keyref for modularization of knowledge bases
#    * allows @index to be optional on arg and act edges
#    * @meta (reference to meta knowledge)
#    * @style (reference to a profile definition)	
#    * @scope (reference to a scope definition)

  
## @meta: an attribute referencing meta knowledge. See
## http://www.reaction.ruleml.org/1.02/glossary/#gloss-@meta
meta-att.choice |= meta.attrib.def
meta.attrib.def =  attribute meta { termOrCurieOrAbsIRIs.datatype }?

## @index: An optional attribute for specifying an ordering on roles. See
## http://www.reaction.ruleml.org/1.02/glossary/#gloss-@index
index-att.choice |= index.attrib
index.attrib = attribute index { xsd:positiveInteger }?

## adding optional index attribute on argument and act edges
arg-datt.choice |= empty
act-datt.choice |= empty

# *** @style ***
#  when absent, equivalent to: reasoning (in DR Reaction RuleML), active (in PR and ECA RuleML), and messaging (in CEP RuleML)
style.attrib = style-att.choice
## @style: defines a reference to a corresponding unique key. See
## http://www.reaction.ruleml.org/1.02/glossary/#gloss-@style
style-att.choice |= style.attrib.def
style.attrib.def = attribute style { style.datatype }
style.datatype |= termOrCurieOrAbsIRI.datatype


## @scope: an attribute referencing a scope definition. See
## http://www.reaction.ruleml.org/1.02/glossary/#gloss-@scope
scope-formula-att.choice |= scope-formula-attrib.def
scope-formula-attrib.def =  attribute scope { termOrCurieOrAbsIRIs.datatype | vocab-scope.datatype }?
scope-term-att.choice |= scope-term-attrib.def
scope-term-attrib.def =  attribute scope { termOrCurieOrAbsIRIs.datatype | vocab-scope.datatype }?
vocab-scope.datatype = "local" | "global" | "private"

# 
# a group of attributes for all XML elements in Reaction RuleML
# 
# @key?, @keyref?
# 
# @key and @keyref attributes for local syntactic modularization of the knowledge base
#
commonInit.attlist &= key-att.choice?
commonInit.attlist &= keyref-att.choice?

#
# a group of attributes for all Nodes
#
commonNode.attlist &=  meta-att.choice?
commonNode.attlist &=  vocab-att.choice? 

#
# a group of attributes for generic Nodes
#
generic-Node.attlist &= type-att.choice?
generic-Node.attlist &= iri-att.choice?
generic-Node.attlist &= commonNode.attlist?


# @key and @keyref attributes for local syntactic modularization of the knowledge base
#
# 
# a group of attributes for the meta knowledge interface of all knowledge formulas in Reaction RuleML
# 
formula-interface.attlist &= type-att.choice?
formula-interface.attlist &= style-att.choice?
formula-interface.attlist &= scope-formula-att.choice?
formula-interface.attlist &= closure-att.choice?
#
# a group of attributes for the meta knowledge interface of all terms in Reaction RuleML
# 
term-interface.attlist &=  type-att.choice?
term-interface.attlist &=  scope-term-att.choice?
# 
# a group of attributes for the meta knowledge interface of all quantifiers in Reaction RuleML
quantifier-interface.attlist &=  type-att.choice? 
quantifier-interface.attlist &=  style-att.choice?
quantifier-interface.attlist &=  scope-formula-att.choice?
# 
# a group of attributes for the meta knowledge interface of all connectives/operators in Reaction RuleML
operator-interface.attlist &=  type-att.choice?
operator-interface.attlist &=  style-att.choice?
operator-interface.attlist &=  scope-formula-att.choice?
# 
# a group of attributes for the meta knowledge interface of all action / performatives in Reaction RuleML
action-interface.attlist &=  type-att.choice?
action-interface.attlist &=  style-att.choice?
action-interface.attlist &=  scope-formula-att.choice?
# 
# a group of attributes for the meta knowledge interface of all events in Reaction RuleML
# 
event-interface.attlist &=  type-att.choice?
event-interface.attlist &=  style-att.choice?
event-interface.attlist &=  scope-formula-att.choice?
#
# the typical attribute list of edges in the header
#
header.attlist &= index-attrib.choice?
header.attlist &= commonInit.attlist?

# *** Naf ***

# Certain nodes allow @type as a mechanism for referring to 
# an externally defined signature or semantics 
reNaf.attlist &= Type.attlist?
reNeg.attlist &= Type.attlist?

