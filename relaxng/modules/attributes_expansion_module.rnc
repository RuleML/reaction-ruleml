namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dc:title [ "Reaction RuleML for DR Attributes" ]
dc:version [ "1.0" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:creator [ "Adrian Paschke" ]
dc:subject [ "RuleML, Reaction, Deliberation, Attributes" ]
dc:description [ "The expansion module for miscellaneous attributes." ]
dc:language [ "en" ]
dcterms:rights [ "TBD" ]
dc:relation [ "http://reaction.ruleml.org" ]
start |= notAllowed
# This module declares the following Reaction RuleML attributes:
#    * @mode (mode declaration)
#    * @safety (transactional)
#    * @per (usage)
#    * @arity (arity of signatures)
#    * @card, @minCard, @maxCard (cardinality constraints)
include "attributes_dr_consumer_expansion_module.rnc" {
  start |= notAllowed
  generic-Node.attlist &= commonNode.attlist?
  reNaf.attlist &= empty
}

## @mode: input-output mode declaration of the arguments in predicates and functions. See
## http://www.reaction.ruleml.org/1.0/glossary/#gloss-@mode
mode-att.choice |= mode.attrib.def
mode.attrib.def = attribute mode { mode.datatype | termOrCurieOrAbsIRI.datatype }
mode.datatype |= "+" | "-" | "?"

# *** @safety ***

## @safety: attribute defining the safety of the execution semantics for events, actions and primitives. See
## http://www.reaction.ruleml.org/1.0/glossary/#gloss-@safety    
safety-att.choice |= safety.attrib.def
safety.attrib.def = attribute safety { safety.datatype | termOrCurieOrAbsIRI.datatype }
safety.datatype |= "non-interrupting" | "interrupting" | "transactional"

# *** @per ***

## @per: an attribute indicating the execution/interpretation semantics of a relation. See
## http://www.reaction.ruleml.org/1.0/glossary/#gloss-@per
per-rel-att.choice |= per-rel.attrib.def
per-rel.attrib.def = attribute per { per-rel.datatype | termOrCurieOrAbsIRI.datatype }
## the interpretation attribute on relations can take all values allowed for the
## interpretation attribute on functions
per-rel.datatype |= interpretation.value

# *** @arity ***

## @arity: an attribute specifying the arity of a signature. See
## http://www.reaction.ruleml.org/1.0/glossary/#gloss-@arity
arity-att.choice |= arity.attrib.def
arity.attrib.def =  attribute arity { xsd:nonNegativeInteger }?

## @card @minCard @maxCard: an attribute optionally specifying the cardinality. See
## http://www.reaction.ruleml.org/1.0/glossary/#gloss-@card
## http://www.reaction.ruleml.org/1.0/glossary/#gloss-@maxCard
## http://www.reaction.ruleml.org/1.0/glossary/#gloss-@minCard
card-att.choice |= card.att.def
card.att.def =
  attribute card { xsd:int }?,
  attribute maxCard { xsd:int }?,
  attribute minCard { xsd:nonNegativeInteger }?
  

## adding optional index attribute on argument and act edges
arg-datt.choice |= empty
act-datt.choice |= empty

# *** Assert with @type?, @mode?, @arity?, @card?, @minCard?, @maxCard?, @weight?, @style?, @direction?, @safety?, @scope?, @closure?, @per? attribute ***
reAssert.attlist &= action-interface.attlist

#	*** Var with mode attribute ***
reVar.attlist &= mode-att.choice?

# *** Rel with per attribute ***
reRel.attlist &= per-rel-att.choice?

# 
# a group of attributes for all XML elements in Reaction RuleML
# 
# @prefix?, @key?, @keyref?, @xml:id?, @xml:base?
#
commonInit.attlist &= prefix-att.choice?
  
# 
# a group of attributes for all XML node elements (type elements) in Reaction RuleML
# 
# @meta?, @node?, @iri?, @vocab?
#
commonNode.attlist &= iri-att.choice?
# 
# a group of attributes for all XML edge elements (role elements) in Reaction RuleML
# 
# @index?
#
edge-element.attlist = index-attrib.choice?

# 
# a group of attributes for the meta knowledge interface of all grouping formulas in Reaction RuleML
# 
# @type?, @mode?, @arity?, @card?, @minCard?, @maxCard?, @weight?, @style?, @direction?, @scope?, @closure?, @material?, @per?  
# 
# attributes of grouping formulas are automatically inherited as default attributes to all formulas in the group.
group-formula-interface.attlist &=
  formula-interface.attlist?, material-att-inf.choice?
# 
# a group of attributes for the meta knowledge interface of all knowledge formulas in Reaction RuleML
# 
# @type?, @mode?, @arity?, @card?, @minCard?, @maxCard?, @weight?, @style?, @direction?, @scope?, @closure?, @per?
# 
#
formula-interface.attlist &= arity-att.choice?
formula-interface.attlist &= card-att.choice?
formula-interface.attlist &= weight-att.choice?
formula-interface.attlist &= direction-att.choice?
formula-interface.attlist &=  mode-att.choice?
formula-interface.attlist &= per-rel-att.choice?
# 
# a group of attributes for the meta knowledge interface of all terms in Reaction RuleML
# 
# @type?, @mode?, @arity?, @card?, @minCard?, @maxCard?, @weight?, @scope?, @per?
#
term-interface.attlist &=
  arity-att.choice?,
  card-att.choice?,
  weight-att.choice?,
  mode-att.choice?,
  per-rel-att.choice?
# 
# a group of attributes for the meta knowledge interface of all quantifiers in Reaction RuleML
# 
# @type?, @card?, @minCard?, @maxCard?, @style?, @scope?
quantifier-interface.attlist &=
  card-att.choice?
# 
# a group of attributes for the meta knowledge interface of all connectives/operators in Reaction RuleML
# 
# @type?, @mode?, @arity?, @card?, @minCard?, @maxCard?, @weight?, @style?, @direction?, @scope?, @closure?, @per?
operator-interface.attlist &=
  arity-att.choice?,
  card-att.choice?,
  weight-att.choice?,
  direction-att.choice?,
  mode-att.choice?,
  closure-att.choice?,
  per-rel-att.choice?
# 
# a group of attributes for the meta knowledge interface of all action / performatives in Reaction RuleML
# 
# @type?, @mode?, @arity?, @card?, @minCard?, @maxCard?, @weight?, @style?, @direction?, @safety?, @scope?, @closure?, @per?
action-interface.attlist &=
  arity-att.choice?,
  card-att.choice?,
  weight-att.choice?,
  direction-att.choice?,
  safety-att.choice?,
  mode-att.choice?,
  closure-att.choice?,
  per-rel-att.choice?
# 
# a group of attributes for the meta knowledge interface of all events in Reaction RuleML
# 
# @type?, @mode?, @arity?, @card?, @minCard?, @maxCard?, @weight?, @style?, @direction?, @safety?, @scope?, @closure?, @per?
event-interface.attlist &=
  arity-att.choice?,
  card-att.choice?,
  weight-att.choice?,
  direction-att.choice?,
  safety-att.choice?,
  mode-att.choice?,
  closure-att.choice?,
  per-rel-att.choice?
