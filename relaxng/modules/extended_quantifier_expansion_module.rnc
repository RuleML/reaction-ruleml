namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"

dc:title [ "Reaction RuleML for DR Generic Quantifier" ]
dc:version [ "1.0" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:creator [ "Adrian Paschke" ]
dc:subject [ "RuleML, Reaction, Deliberation, Quantifier" ]
dc:description [
  "The expansion module for a generic quantifier."
]
dc:language [ "en" ]
dcterms:rights [ "TBD" ]
dc:relation [ "http://reaction.ruleml.org" ]
start |= Quantifier

# *** Quantifier ***

## Quantifier attribute list with the @type and @iri
Quantifier.attlist &= generic-Node.attlist?
Quantifier.content |= Quantifier.header, Quantifier.main
Quantifier.header &= Node.header?
Quantifier.main |= boundVariables.choice, formula-inner-quant.choice?
Quantifier.type.def = Quantifier.content, Quantifier.attlist
Quantifier =
  
  ## <Quantifier>: a generic quantifier - "quantify over declared variables such that ...".See
  ## http://www.reaction.ruleml.org/1.02/glossary/#gloss-Quantifier
  element Quantifier { Quantifier.type.def }
Node.choice |= Quantifier
#
Quantifier-node.choice |= Quantifier
Quantifier-fo-node.choice |= notAllowed
QueryFormula.choice |= Quantifier-fo-node.choice
AssertRetractFormula.choice |= Quantifier-fo-node.choice
AndFormula.choice |= Quantifier-fo-node.choice
OrFormula.choice |= Quantifier-fo-node.choice
AndQueryFormula.choice |= Quantifier-node.choice
OrQueryFormula.choice |= Quantifier-node.choice
PremiseFormula.choice |= Quantifier-node.choice
ConclusionFormula.choice |= Quantifier-fo-node.choice
RulebaseFormula.choice |= Quantifier-fo-node.choice
NegationFormula.choice |= Quantifier-fo-node.choice
NegFormula.choice |= Quantifier-fo-node.choice
NafFormula.choice |= Quantifier-fo-node.choice
ForallFormula.choice |= Quantifier-fo-node.choice
ExistsFormula.choice |= Quantifier-fo-node.choice
ExistsQueryFormula.choice |= Quantifier-fo-node.choice
#
