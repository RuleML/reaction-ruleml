<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://ruleml.org/spec" xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/"
	targetNamespace="http://ruleml.org/spec" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation xml:lang="en">
        Profile module part of Reaction RuleML.
		This is the XML Schema Profile element for Reaction RuleML for describing semantic profiles.
		Semantic Profiles are used to define the interpretation evaluation semantics (under the evaluation metatag) 
		either by referecing external existing profiles or by defining them internally.
		File: profile_module.xsd
		Version: 1.0
		Last Modification: 2011-03-22
		
		* Profile         generic semantic profile
			
		</xs:documentation>
		<xs:documentation source="http://ruleml.org/licensing/ruleml_eula.html"/>
		<xs:appinfo>
			<dc:title>RuleML Schema</dc:title>
			<dc:version>1.0</dc:version>
			<dc:creator>Adrian Paschke (paschke AT gmx.de)</dc:creator>
			<dc:subject>RuleML, custom-built for Reaction RuleML 1.0</dc:subject> 
			<dc:description>custom-built main module for Reaction RuleML</dc:description> 
			<dc:date>2011-03-22T23:11:17-0300</dc:date>
			<dc:language>en</dc:language>
			<dcterms:rights>LGPL-3.0</dcterms:rights> 
			<dc:relation>http://wiki.ruleml.org/index.php/Relax_NG</dc:relation>
		</xs:appinfo> 
	</xs:annotation>


	<!--
	*** Profile ***
	Explicit generic semantic profile defining the semantics of the rule. The semantic profile can be
      defined internally by the any content model (xs:any Element) or externally, where 
      the optional @type attribute defines the name/type of the used sematics profile,
      the optional @iri attribute points to an external definition of the semantics profile, and
      the optional @direction attribute indicates the intended direction of the inference / execution
      the optional @safety attribute indicates if the execution / inference is transactional, interrupting, non-interrupting
      the optional @size attribute acts as a generic size boundary / counter in the operational semantic profiles    

	DR Reaction RuleMl: (meta*, scope*, guard*, evaluation*, signature*, qualification*, quantification*, oid?,  (formula | Rulebase | Atom | Rule | Equivalent | Entails | Forall | Quantifier | Equal | Negation | Neg | Time | Spatial | Interval | content(xs:any*)  )*)
    KR Reaction RuleMl: (meta*, scope*, guard*, evaluation*, signature*, qualification*, quantification*, oid?,  (formula | Rulebase | Atom | Rule | Equivalent | Entails | Forall | Quantifier | Equal | Negation | Neg | Time | Spatial | Interval | Event | Action | Situation | Holds | Initiates | Terminates | Happens | content(xs:any*) )*)	
	-->
	<xs:attributeGroup name="Profile.attlist">
		<xs:attributeGroup ref="type.attrib"/>
		<xs:attributeGroup ref="iri.attrib"/>
		<xs:attributeGroup ref="direction.attrib"/>
		<xs:attributeGroup ref="node.attrib"/>
		<xs:attributeGroup ref="safety.attrib"/>
		<xs:attributeGroup ref="size.attrib"/>
		<xs:attributeGroup ref="xml.attlist"/>
	</xs:attributeGroup>
	<xs:group name="Profile.content">
		<xs:sequence>
			<xs:group ref="meta-roles.content"/>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="formula" type="formula-assert.type"/>
				<xs:group ref="formula-assert.content"/>
				<xs:element name="content" type="profile_anycontent.type"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="Profile.type">
		<xs:group ref="Profile.content"/>
		<xs:attributeGroup ref="Profile.attlist"/>
	</xs:complexType>
	<xs:element name="Profile" type="Profile.type"/>
	
	<!--
     *** content ***
     
     content model:  (xs:any*)
-->
	<xs:attributeGroup name="profile_anycontent.attlist">
		<xs:attributeGroup ref="xml.attlist"/>
	</xs:attributeGroup>
	<xs:group name="profile_anycontent.content">
		<xs:choice>
			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="profile_anycontent.type">
		<xs:group ref="profile_anycontent.content"/>
		<xs:attributeGroup ref="profile_anycontent.attlist"/>
	</xs:complexType>
</xs:schema>
