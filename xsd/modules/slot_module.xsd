<?xml version="1.0"?>

<xs:schema targetNamespace="http://ruleml.org/spec" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/"
  xmlns="http://ruleml.org/spec">

  <xs:annotation>
    <xs:documentation xml:lang="en"> This is the XML Schema module for RuleML slots. File:
      slot_module.xsd Version: 1.0 Last Modification: 2011-07-16 This module declares the following
      RuleML element and attributes: * slot 
      See
      http://www.ruleml.org/modularization for details about this modularization approach.
    </xs:documentation>
    <xs:documentation source="http://ruleml.org/licensing/ruleml_eula.html"/>
    <xs:appinfo>
      <dc:title>RuleML Schema</dc:title>
      <dc:version>1.0</dc:version>
      <dc:creator>Adrian Paschke (paschke AT gmx.de)</dc:creator>
      <dc:creator>Tara Athan (taraathan AT gmail.com)</dc:creator>
      <dc:subject>RuleML, custom-built for Reaction RuleML 1.0</dc:subject> 
      <dc:description>custom-built main module for Reaction RuleML</dc:description> 
      <dc:date>2011-07-16T23:11:17-0300</dc:date>
      <dc:language>en</dc:language>
      <dc:rights>'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.</dc:rights> <dcterms:rights>http://ruleml.org/licensing/RSL1.0-RuleML</dcterms:rights>  
       <dc:relation>http://reaction.ruleml.org</dc:relation>
    </xs:appinfo>  
  </xs:annotation>

  <!--
		*** slot ***
		A user-defined slot consisting of a name (first position) and a filler (second position).
		
		see: http://wiki.ruleml.org/index.php/Glossary_of_Reaction_RuleML_1.0#gloss-slot

		content model:
		DR Reaction RuleML: ( (Ind|Data|Expr|Plex|Time|Spatial|Interval), (Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval) )
		KR Reaction RuleML: ( (Ind|Data|Expr|Plex|Time|Spatial|Interval|Event|Action|Situation), (Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval|Event|Action|Situation) )
		PR Reaction RuleML: ( (Ind|Data|Expr|Plex), (Ind|Data|Skolem|Var|Reify|Expr|Plex) )
		ECA Reaction RuleML: ( (Ind|Data|Expr|Plex|Time|Spatial|Interval|Event|Action), (Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval|Event|Action) )
		
		attributes: @card?, @minCard?, @maxCard?, @weight?, @prefix?, @key?, @keyref?, @xml:id?, @xml:base?  
		
	-->
  <xs:attributeGroup name="slot.attlist">
    <xs:attributeGroup ref="card.attrib"/>
    <xs:attributeGroup ref="weight.attrib"/>
    <xs:attributeGroup ref="xml.attlist"/>
  </xs:attributeGroup>
  <xs:group name="slot-name.extend">
    <xs:choice>
      <xs:group ref="extended-signature-function-sorts.content"/>
    </xs:choice>
  </xs:group>
  <xs:group name="slot.content">
    <xs:sequence>
      <xs:group ref="slot-name.extend"/>
      <xs:group ref="arg.content"/>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="slot.type">
    <xs:group ref="slot.content"/>
    <xs:attributeGroup ref="slot.attlist"/>
  </xs:complexType>
  <xs:element name="slot" type="slot.type"/>


</xs:schema>
