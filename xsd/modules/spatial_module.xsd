<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://ruleml.org/spec" xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/"
	targetNamespace="http://ruleml.org/spec" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation xml:lang="en">
			
			Spatial module part of Reaction RuleML. It defines the core 
			spatial constructs
			
			This is the XML Schema spatial module for Reaction RuleML.
			File: spatial_module.xsd
			Version: 1.02
			Last Modification: 2015-07-19
			
			This schema declares the following Reaction RuleML elements and attributes:
			
			* Spatial
			
		</xs:documentation>
		
		<xs:appinfo>
			<dc:title>RuleML Schema</dc:title>
			<dc:version>1.02</dc:version>
			<dc:creator>Adrian Paschke (paschke AT gmx.de)</dc:creator>
            <dc:creator>Tara Athan (taraathan AT gmail.com)</dc:creator>
			<dc:subject>RuleML, custom-built for Reaction RuleML 1.02</dc:subject> 
			<dc:description>custom-built main module for Reaction RuleML</dc:description> 
			<dc:date>2015-07-14T17:04:00+0200</dc:date>
			<dc:language>en</dc:language>
			<dc:rights>'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.</dc:rights> <dcterms:rights>http://ruleml.org/licensing/RSL1.0-RuleML</dcterms:rights> 
			 <dc:relation>http://reaction.ruleml.org</dc:relation>
		</xs:appinfo>  
	</xs:annotation>
	
	
	<!--
	*** Spatial ***
	Explicit generic Spatial construct. 
	
	see: http://wiki.ruleml.org/index.php/Glossary_of_Reaction_RuleML_1.02#gloss-Spatial
	
	The spatial can be represented internally 
      * with positional arguments <arg>
      * with unpositional slots <slot>
      * by the any content model (<content>xs:any Element</content>), which acts as an extension point to embed arbitrary XML syntaxes
      or externally, where the optional @iri attribute points to an external data definition of the spatial
      The optional @type attribute defines the type of the spatial
		
	content model: 
	DR Reaction RuleML: ( meta*, scope*, guard*, evaluation*, signature*, qualification*, quantification*, oid?, degree?, ( 
		        ((slot)*,(resl)?,((((arg|Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval| (After | Before | Any | Every | Timer | Operation))+, (repo)?)|(repo)),(slot)*, (resl)?)?) | 
				content(xs:any*)* ) ) 
	KR Reaction RuleML: ( meta*, scope*, guard*, evaluation*, signature*, qualification*, quantification*, oid?, degree?, ( 
		        ((slot)*,(resl)?,((((arg|Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval|Event|Action|Situation| (After | Before | Any | Every | Timer | Operation))+, (repo)?)|(repo)),(slot)*, (resl)?)?) | 
				content(xs:any*)* ) ) 
	PR Reaction RuleML: not used in PR Reaction RuleML
	DR Reaction RuleML: ( meta*, scope*, guard*, evaluation*, signature*, qualification*, quantification*, oid?, degree?, ( 
		        ((slot)*,(resl)?,((((arg|Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval|Event|Action)+, (repo)?)|(repo)),(slot)*, (resl)?)?) | 
				content(xs:any*)* ) ) 
				
	attributes: @type?, @mode?, @arity?, @card?, @minCard?, @maxCard?, @weight?, @style?, @direction?, @scope?, @closure?, @per?, @meta?, @qualify?, @node?, @iri?, @vocab?, @prefix?, @key?, @keyref?, @xml:id?, @xml:base?
	-->
	<xs:attributeGroup name="Spatial-formula.attlist">
		<xs:attributeGroup ref="formula-interface.attlist"/>
		<xs:attributeGroup ref="node-element.attlist"/>
		<xs:attributeGroup ref="xml.attlist"/>
	</xs:attributeGroup>
	<xs:group name="Spatial-formula.content">
		<xs:sequence>
			<xs:group ref="meta-roles.content"/>	
			<xs:element ref="degree" minOccurs="0"/>
			<xs:choice>
				<xs:sequence>
					<xs:element name="slot" type="slot.type" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element ref="resl" minOccurs="0"/>
					<xs:choice minOccurs="0">
						<xs:sequence>
						<xs:choice>
							<xs:sequence>
								<xs:choice maxOccurs="unbounded">
									<xs:element name="arg" type="arg_spatial.type"/>									
									<xs:group ref="spatial_primitives.content"/>
								</xs:choice>
								<xs:element ref="repo" minOccurs="0"/>
							</xs:sequence>
							<xs:element ref="repo"/>
						</xs:choice>
						<xs:element name="slot" type="slot.type" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element ref="resl" minOccurs="0"/>
						</xs:sequence>
					</xs:choice>
				</xs:sequence>
				<xs:element name="content" type="spatial_anycontent.type" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="Spatial-formula.type">
		<xs:group ref="Spatial-formula.content"/>
		<xs:attributeGroup ref="Spatial-formula.attlist"/>
	</xs:complexType>


	<!-- Spatial term -->

	<xs:attributeGroup name="Spatial-term.attlist">
		<xs:attributeGroup ref="term-interface.attlist"/>
		<xs:attributeGroup ref="node-element.attlist"/>
		<xs:attributeGroup ref="xml.attlist"/>
	</xs:attributeGroup>
	<xs:group name="Spatial-term.content">
		<xs:sequence>
			<xs:group ref="meta-roles.content"/>	
			<xs:choice>
				<xs:sequence>
					<xs:element name="slot" type="slot.type" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element ref="resl" minOccurs="0"/>
					<xs:choice minOccurs="0">
						<xs:sequence>
							<xs:choice>
								<xs:sequence>
									<xs:choice maxOccurs="unbounded">
										<xs:element name="arg" type="arg_spatial.type"/>									
										<xs:group ref="spatial_primitives.content"/>
									</xs:choice>
									<xs:element ref="repo" minOccurs="0"/>
								</xs:sequence>
								<xs:element ref="repo"/>
							</xs:choice>
							<xs:element name="slot" type="slot.type" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element ref="resl" minOccurs="0"/>
						</xs:sequence>
					</xs:choice>
				</xs:sequence>
				<xs:element name="content" type="spatial_anycontent.type" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="Spatial-term.type">
		<xs:group ref="Spatial-term.content"/>
		<xs:attributeGroup ref="Spatial-term.attlist"/>
	</xs:complexType>

	<!--
     *** arg ***
     
     Definition of the the arg role for Spatial
     
     see: http://wiki.ruleml.org/index.php/Glossary_of_Reaction_RuleML_1.02#gloss-arg
     
     content model:  
     in DR Reaction RuleML: (Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval| (After | Before | Any | Every | Timer | Operation))
     in KR Reaction RuleML: (Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval|Event|Action|Situation | (After | Before | Any | Every | Timer | Operation))
     in PR Reaction RuleML: not used in PR Reaction RuleML
     in ECA Reaction RuleML: (Ind|Data|Skolem|Var|Reify|Expr|Plex|Time|Spatial|Interval|Event|Action | (After | Before | Any | Every | Timer | Operation)) 
     
      @index?, @prefix?, @key?, @keyref?, @xml:id?, @xml:base?  
-->
	<xs:attributeGroup name="arg_spatial.attlist">
		<xs:attributeGroup ref="edge-element.attlist"/>
		<xs:attributeGroup ref="xml.attlist"/>
	</xs:attributeGroup>
	<xs:group name="arg_spatial.content">
		<xs:choice>
			<xs:group ref="spatial_primitives.content"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="arg_spatial.type">
		<xs:group ref="arg_spatial.content"/>
		<xs:attributeGroup ref="arg_spatial.attlist"/>
	</xs:complexType>


	<!--
     *** content ***
     
     see: http://wiki.ruleml.org/index.php/Glossary_of_Reaction_RuleML_1.02#gloss-content
     
     @prefix and @vocab is used to define a prefix and a term mapping vocabulary for the XML content
     	See CURIE to IRI and term to IRI translation
     
     content model:  xs:any*
     attributes:  @index?, @prefix?, @key?, @keyref?, @xml:id?, @xml:base?
	-->
	<xs:attributeGroup name="spatial_anycontent.attlist">
		<xs:attributeGroup ref="edge-element.attlist"/>	
		<xs:attributeGroup ref="xml.attlist"/>
	</xs:attributeGroup>
	<xs:group name="spatial_anycontent.content">
		<xs:choice>
			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="spatial_anycontent.type">
		<xs:group ref="spatial_anycontent.content"/>
		<xs:attributeGroup ref="spatial_anycontent.attlist"/>
	</xs:complexType>
	

</xs:schema>
